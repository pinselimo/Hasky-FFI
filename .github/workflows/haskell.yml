name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  stack:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      with:
        stack-version: 'latest'

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-stack
      with:
        path: .stack
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cache') }}-${{ hashFiles('**/stack.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        stack update
        stack build --only-dependencies
    - name: Build
      run: stack build
    - name: Run tests
      run: stack test

  cabal:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        ghc: ['8.8.4', '8.10.3', 'latest']
        exclude:
          - platform: macos-latest
            ghc: '8.10.3'
        include:
          - ghc: '8.8.4'
            cabal: '3.0.0.0'
          - ghc: '8.10.3'
            cabal: '3.2.0.0'
          - ghc: 'latest'
            cabal: 'latest'

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        cabal update
        cabal build --only-dependencies --enable-tests --enable-benchmarks
    - name: Build
      run: cabal build --enable-tests --enable-benchmarks --write-ghc-environment-files=always all
    - name: Run tests
      run: cabal test all
